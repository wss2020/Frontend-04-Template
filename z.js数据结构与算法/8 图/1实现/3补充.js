/**
 * BST 存在一个问题：取决于你添加的节点数，树的一条边可能会非常深；也就是说，树的一条分支会有很多层，而其他的分支却只有几层。
 *  这会在需要在某条边上添加、移除和搜索某个节点是引起一些性能问题。 为了解决这个问题，有一种树叫作 阿德尔森-维尔斯和兰迪斯树（AVL树）。
 *      AVL树是一种自平衡二叉搜索树，意思是任何一个节点左右两侧子树的高度之差最多是1。也就是说这种树会在添加或移除节点时尽量试着成为一颗完全树。
 *      另一种应该学习的树是红黑树，它是一种特殊的二叉树。这种树可以进行高效的中序遍历。
 *      此外，堆积树也值得你去学习。
 * */
